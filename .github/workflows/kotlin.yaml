name: Kotlin
env:
  WORKING_DIRECTORY: bindings/kotlin

on:
  push:
    branches:
      - master
    tags-ignore:
      - '**'
    paths:
      - 'bindings/kotlin/**'
      - 'core/**'
      - 'test-data/**'
      - '.github/workflows/kotlin.yaml'
  pull_request:
    paths:
      - 'bindings/kotlin/**'
      - 'core/**'
      - 'test-data/**'
      - '.github/workflows/kotlin.yaml'

jobs:
  build:
    if: "!contains(github.event.head_commit.message, 'skip ci')"

    strategy:
      fail-fast: true
      matrix:
        settings:
          - host: windows-latest
            target: 'x86_64-pc-windows-msvc'
            extension: "dll"
            lib_dir: TODO
          - host: macos-13
            target: 'x86_64-apple-darwin'
            extension: "dylib"
            lib_dir: TODO
          - host: macos-14
            target: 'aarch64-apple-darwin'
            extension: "dylib"
            lib_dir: 'darwin-aarch64'
          - host: ubuntu-latest
            target: 'x86_64-unknown-linux-gnu'
            extension: "so"
            lib_dir: TODO
          - host: ubuntu-latest
            target: 'aarch64-unknown-linux-gnu'
            extension: ".so"
            lib_dir: TODO

    name: stable - ${{ matrix.settings.target }} - kotlin@17
    runs-on: ${{ matrix.settings.host }}
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}

    steps:
      - uses: actions/checkout@v3

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          target: ${{ matrix.settings.target }}

      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
            .cargo-cache
          key: ${{ matrix.settings.target }}-cargo-registry

      - name: Build
        shell: bash
        run: cargo build --lib --release --target ${{ matrix.settings.target }}

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.settings.lib_dir }}
          path: ./../target/release/libzen_kotlin.${{ matrix.settings.extension }}

  release:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}
    needs: [build]

    steps:
      - uses: actions/checkout@v3

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          target: ${{ matrix.settings.target }}

      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
            .cargo-cache
          key: ${{ matrix.settings.target }}-cargo-registry

      - name: Validate Gradle wrapper jar
        uses: gradle/wrapper-validation-action@v1

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: build/generated/main/resources

      - name: Generate Kotlin sources
        run: |
          cargo run \
            --bin uniffi-bindgen \
            --features "uniffi/cli" \
            -- generate \ 
            --library build/generated/resources/libs/libzen_kotlin.dylib \
            --language kotlin \
            --out-dir build/generated/main/kotlin

#    TODO
#      - name: Setup Maven Repository credentials
#        run:

      - name: Publish Maven Artifact
        run: ./gradlew publish
